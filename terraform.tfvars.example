# Example Terraform variables file
# Copy this to terraform.tfvars and customize the values

# AWS Configuration
aws_region = "us-west-2"

# Project Configuration
project_name = "devops-test"

# SSH Key Configuration
# Multiple SSH Keys for team access
public_ssh_keys = [
  # Example: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC... user1@example.com",
  # Example: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAI... user2@example.com"
]

# Instance Configuration
instance_type = "t3.small"  # Larger instance for dev
ami_id = "ami-07a3add10195338ad" # Ubuntu 22.04 LTS AMI ID for us-east-1 (REQUIRED)

# Security Configuration (REQUIRED - No defaults for dev)
# CRITICAL: Replace with your actual IP addresses for SSH access
allowed_ssh_cidrs = [
  "203.0.113.0/32",  # Replace with your office IP
  "198.51.100.0/32"  # Replace with your home IP
]

# Privileged access CIDRs (additional ports/services)
privileged_access_cidrs = [
  "203.0.113.0/24"  # Example admin network with full access
]

# dev SECURITY NOTES:
# - SSH access from 0.0.0.0/0 is BLOCKED by validation
# - You MUST specify specific IP addresses
# - Use VPN or bastion host for additional security

# VPC Configuration
environment = "dev"
vpc_cidr = "10.0.0.0/16"
public_subnet_cidrs = ["10.0.1.0/24", "10.0.2.0/24"]
private_subnet_cidrs = ["10.0.10.0/24", "10.0.20.0/24"]
enable_nat_gateway = true

# S3 Configuration
s3_bucket_names = [
  "static-assets",
  "uploads",
  "backups",
  "logs"
]

# Aurora Configuration
aurora_database_name = "devopsdb"
aurora_master_username = "admin"
aurora_engine_version = "8.0.mysql_aurora.3.02.0"
aurora_instance_class = "db.serverless"
aurora_instance_count = 1
aurora_max_capacity = 16
aurora_min_capacity = 0.5
aurora_backup_retention_period = 7
aurora_deletion_protection = true
aurora_skip_final_snapshot = false

# ECR Configuration
ecr_repository_names = [
  "api",
  "worker",
  "backend", 
  "frontend"
]

ecr_enable_lifecycle_policy = true
ecr_default_lifecycle_policy = {
  max_image_count = 10
  max_image_age   = 30
}
